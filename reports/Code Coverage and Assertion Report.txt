Coverage Report by instance with details

=================================================================================
=== Instance: /\tb_top#DUT /Master
=== Design Unit: work.APB_Master
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17        16         1    94.11%

================================Branch Details================================

Branch Coverage for instance /\tb_top#DUT /Master

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Master.v
------------------------------------IF Branch------------------------------------
    35                                     10292     Count coming in to IF
    35              1                        601             if(~PRESETn) 
    37              1                       9691             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    43                                     19932     Count coming in to CASE
    44              1                        693                 IDLE : begin
    50              1                       9428                 SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock
    51              1                       9809                 ACCESS : begin
    59              1                          2                 default : ns = IDLE;
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                       693     Count coming in to IF
    45              1                        431                     if(transfer)
    47              1                        262                     else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      9809     Count coming in to IF
    52              1                        259                     if(PREADY && !transfer)
    54              1                       4696                     else if(PREADY && transfer)
    56              1                       4854                     else
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                     19968     Count coming in to IF
    65              1                        605             if(~PRESETn)
    75              1                      19363             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    76                                     19363     Count coming in to CASE
    77              1                        557                     IDLE : begin
    81              1                       9551                     SETUP : begin
    90              1                       9255                     ACCESS : begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /\tb_top#DUT /Master --

  File design/APB_design/APB_Master.v
----------------Focused Condition View-------------------
Line       52 Item    1  (PREADY && ~transfer)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      PREADY         Y
    transfer         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  PREADY_0              -                             
  Row   2:          1  PREADY_1              ~transfer                     
  Row   3:          1  transfer_0            PREADY                        
  Row   4:          1  transfer_1            PREADY                        

----------------Focused Condition View-------------------
Line       54 Item    1  (PREADY && transfer)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      PREADY         Y
    transfer         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  PREADY_0              -                             
  Row   2:          1  PREADY_1              transfer                      
  Row   3:    ***0***  transfer_0            PREADY                        
  Row   4:          1  transfer_1            PREADY                        


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       3         3         0   100.00%
    FSM Transitions                  5         5         0   100.00%

================================FSM Details================================

FSM Coverage for instance /\tb_top#DUT /Master --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  44                IDLE                   0
  50               SETUP                   1
  51              ACCESS                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 741          
                   SETUP                4848          
                  ACCESS                4703          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  46                   0                 416          IDLE -> SETUP                 
  50                   1                4703          SETUP -> ACCESS               
  36                   2                 144          SETUP -> IDLE                 
  55                   3                4432          ACCESS -> SETUP               
  53                   4                 271          ACCESS -> IDLE                


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   3         3         0   100.00%
        FSM Transitions              5         5         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      30        30         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#DUT /Master --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Master.v
    4                                                module APB_Master (
    5                                                        //the followin signals are from the External System 
    6                                                        //the system signals names will begin with letter S
    7                                                        //note : we will act as the external system in the testbench
    8                                                        input SWRITE,
    9                                                        input [`APB_ADDR_WIDTH-1:0] SADDR, 
    10                                                       input [`APB_DATA_WIDTH-1:0] SWDATA, 
    11                                                       input [`APB_STRB_WIDTH-1:0] SSTRB,
    12                                                       input [`APB_PROT_WIDTH-1:0] SPROT,
    13                                                       input transfer,   //to indicate the beginning of the transfer
    14                                               
    15                                                       //the followin signals are Master signals
    16                                                       output reg PSEL, PENABLE, PWRITE,
    17                                                       output reg [`APB_ADDR_WIDTH-1:0] PADDR,
    18                                                       output reg [`APB_DATA_WIDTH-1:0] PWDATA,
    19                                                       output reg [`APB_STRB_WIDTH-1:0] PSTRB,
    20                                                       output reg [`APB_PROT_WIDTH-1:0] PPROT,
    21                                                       input PCLK, PRESETn,
    22                                                       input  PREADY,
    23                                                       input PSLVERR
    24                                                   );
    25                                                   //defining our states
    26                                                   localparam  IDLE = 2'b00,
    27                                                               SETUP = 2'b01,
    28                                                               ACCESS = 2'b10;
    29                                                   (* fsm_encoding = "one_hot" *)
    30                                                   reg [1:0] ns, cs ; //next state, current state
    31                                               
    32                                                   //state memory 
    33              1                      10292         always @(posedge PCLK, negedge PRESETn)
    34                                                   begin
    35                                                       if(~PRESETn) 
    36              1                        601                 cs <= IDLE;
    37                                                       else 
    38              1                       9691                 cs <= ns;
    39                                                   end
    40                                               
    41                                                   //next state logic
    42              1                      19932         always @(*) begin
    43                                                       case(cs)
    44                                                           IDLE : begin
    45                                                               if(transfer)
    46              1                        431                         ns = SETUP;
    47                                                               else
    48              1                        262                         ns = IDLE;
    49                                                           end
    50              1                       9428                 SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock
    51                                                           ACCESS : begin
    52                                                               if(PREADY && !transfer)
    53              1                        259                         ns = IDLE;
    54                                                               else if(PREADY && transfer)
    55              1                       4696                         ns = SETUP;
    56                                                               else
    57              1                       4854                         ns = ACCESS;
    58                                                           end
    59              1                          2                 default : ns = IDLE;
    60                                                       endcase
    61                                                   end
    62                                               
    63                                                   //output logic
    64              1                      19968         always @(*) begin
    65                                                       if(~PRESETn)
    66                                                           begin
    67              1                        605                     PSEL = 0;
    68              1                        605                     PENABLE = 0;
    69              1                        605                     PWRITE = 0;
    70              1                        605                     PADDR = 0;
    71              1                        605                     PWDATA = 0;
    72              1                        605                     PSTRB = 0;
    73              1                        605                     PPROT = 0;
    74                                                           end
    75                                                       else begin
    76                                                           case(cs)
    77                                                               IDLE : begin
    78              1                        557                         PSEL = 0;
    79              1                        557                         PENABLE = 0;
    80                                                               end
    81                                                               SETUP : begin
    82              1                       9551                         PSEL = 1;
    83              1                       9551                         PENABLE = 0;   //signals are sent to slave in setup state
    84              1                       9551                         PWRITE = SWRITE;
    85              1                       9551                         PADDR = SADDR;
    86              1                       9551                         PWDATA = SWDATA;
    87              1                       9551                         PSTRB = SSTRB;
    88              1                       9551                         PPROT = SPROT;
    89                                                               end
    90                                                               ACCESS : begin
    91              1                       9255                         PSEL = 1;
    92              1                       9255                         PENABLE = 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        222       222         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT /Master --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[9-0]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[2-0]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[3-0]           1           1                              100.00 
                                      PWDATA[31-0]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 
                                        SADDR[0-9]           1           1                              100.00 
                                        SPROT[0-2]           1           1                              100.00 
                                        SSTRB[0-3]           1           1                              100.00 
                                      SWDATA[0-31]           1           1                              100.00 
                                            SWRITE           1           1                              100.00 
                                           cs[1-0]           1           1                              100.00 
                                           ns[1-0]           1           1                              100.00 
                                          transfer           1           1                              100.00 

Total Node Count     =        111 
Toggled Node Count   =        111 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (222 of 222 bins)

=================================================================================
=== Instance: /\tb_top#DUT /Slave
=== Design Unit: work.APB_Slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        23        23         0   100.00%

================================Branch Details================================

Branch Coverage for instance /\tb_top#DUT /Slave

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Slave.v
------------------------------------IF Branch------------------------------------
    23                                      9725     Count coming in to IF
    23              1                        304             if (~PRESETn) begin
    27              1                       9005             else if (PSEL) begin  // Access state when PSEL is high
                                             416     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      9005     Count coming in to IF
    29              1                       6512                 if (PWRITE) begin     
    51              1                       2493                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    30                                      6512     Count coming in to CASE
    31              1                        228                     4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)
    32              1                        193                     4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits
    33              1                        185                     4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)
    34              1                        207                     4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits
    35              1                        210                     4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes
    36              1                        184                     4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits
    37              1                        184                     4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)
    38              1                        176                     4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension
    39              1                        193                     4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension
    40              1                        234                     4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0
    41              1                        235                     4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary
    42              1                        166                     4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension
    43              1                        925                     4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits
    44              1                       1019                     4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits
    45              1                       1997                     4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension
    46              1                        176                     default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values
Branch totals: 16 hits of 16 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      2493     Count coming in to IF
    52              1                       1907                     if (PSTRB != 0)
    54              1                        586                     else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         1         0   100.00%

================================Condition Details================================

Condition Coverage for instance /\tb_top#DUT /Slave --

  File design/APB_design/APB_Slave.v
----------------Focused Condition View-------------------
Line       52 Item    1  (PSTRB != 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (PSTRB != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (PSTRB != 0)_0        -                             
  Row   2:          1  (PSTRB != 0)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        23         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#DUT /Slave --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Slave.v
    5                                                module APB_Slave #(
    6                                                        parameter MEM_WIDTH = `MEM_WIDTH, 
    7                                                        parameter MEM_DEPTH = `MEM_DEPTH
    8                                                    ) (
    9                                                        input PSEL, PENABLE, PWRITE,  
    10                                                       input [`APB_ADDR_WIDTH-1:0] PADDR, 
    11                                                       input [`APB_DATA_WIDTH-1:0] PWDATA,
    12                                                       input [`APB_STRB_WIDTH-1:0] PSTRB,
    13                                                       input [`APB_PROT_WIDTH-1:0] PPROT,
    14                                                       input PCLK, PRESETn,
    15                                                       output reg [`APB_DATA_WIDTH-1:0] PRDATA,
    16                                                       output PREADY,
    17                                                       output reg PSLVERR
    18                                                   );
    19                                                   // Define memory using the MEM_WIDTH and MEM_DEPTH from `defines`
    20                                                   reg [MEM_WIDTH-1:0] Cache [MEM_DEPTH-1:0];
    21                                               
    22              1                       9725         always @ (posedge PCLK) begin
    23                                                       if (~PRESETn) begin
    24              1                        304                 PSLVERR <= 0;
    25              1                        304                 PRDATA <= 0;
    26                                                       end
    27                                                       else if (PSEL) begin  // Access state when PSEL is high
    28                                                           // Writing stage
    29                                                           if (PWRITE) begin     
    30                                                             case (PSTRB)
    31              1                        228                     4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)
    32              1                        193                     4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits
    33              1                        185                     4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)
    34              1                        207                     4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits
    35              1                        210                     4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes
    36              1                        184                     4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits
    37              1                        184                     4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)
    38              1                        176                     4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension
    39              1                        193                     4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension
    40              1                        234                     4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0
    41              1                        235                     4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary
    42              1                        166                     4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension
    43              1                        925                     4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits
    44              1                       1019                     4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits
    45              1                       1997                     4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension
    46              1                        176                     default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values
    47                                                           endcase
    48              1                       6512                     PSLVERR <= 0;
    49                                                           end
    50                                                           // Reading stage
    51                                                           else begin
    52                                                               if (PSTRB != 0)
    53              1                       1907                         PSLVERR <= 1;  // PSTRB must remain low when reading
    54                                                               else begin
    55              1                        586                         PRDATA <= Cache[PADDR];
    56              1                        586                         PSLVERR <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        176       176         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT /Slave --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[0-9]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[0-2]           1           1                              100.00 
                                      PRDATA[31-0]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[0-3]           1           1                              100.00 
                                      PWDATA[0-31]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 

Total Node Count     =         88 
Toggled Node Count   =         88 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (176 of 176 bins)

=================================================================================
=== Instance: /\tb_top#DUT /APB_sva_inst
=== Design Unit: work.APB_sva
=================================================================================

Assertion Coverage:
    Assertions                      13        13         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/\tb_top#DUT /APB_sva_inst/reset_master_assert
                     design/APB_Assertions/APB_sva.sv(54)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/reset_slave_assert
                     design/APB_Assertions/APB_sva.sv(57)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/reset_fsm_assert
                     design/APB_Assertions/APB_sva.sv(60)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/idle_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(76)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/idle_hold_assert
                     design/APB_Assertions/APB_sva.sv(79)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/setup_to_access_assert
                     design/APB_Assertions/APB_sva.sv(88)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/access_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(102)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/illegal_access_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(105)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/access_to_idle_assert
                     design/APB_Assertions/APB_sva.sv(119)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/illegal_access_to_idle_assert
                     design/APB_Assertions/APB_sva.sv(122)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_idle_assert
                     design/APB_Assertions/APB_sva.sv(131)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_setup_assert
                     design/APB_Assertions/APB_sva.sv(146)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_access_assert
                     design/APB_Assertions/APB_sva.sv(155)
                                                        0          1
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        286       286         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT /APB_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[0-9]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[0-2]           1           1                              100.00 
                                      PRDATA[0-31]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[0-3]           1           1                              100.00 
                                      PWDATA[0-31]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 
                                        SADDR[0-9]           1           1                              100.00 
                                        SPROT[0-2]           1           1                              100.00 
                                        SSTRB[0-3]           1           1                              100.00 
                                      SWDATA[0-31]           1           1                              100.00 
                                            SWRITE           1           1                              100.00 
                                           cs[0-1]           1           1                              100.00 
                                           ns[0-1]           1           1                              100.00 
                                          transfer           1           1                              100.00 

Total Node Count     =        143 
Toggled Node Count   =        143 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (286 of 286 bins)

=================================================================================
=== Instance: /\tb_top#DUT 
=== Design Unit: work.APB_Wrapper
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        278       278         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT  --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[0-9]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[0-2]           1           1                              100.00 
                                      PRDATA[0-31]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[0-3]           1           1                              100.00 
                                      PWDATA[0-31]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 
                                        SADDR[0-9]           1           1                              100.00 
                                        SPROT[0-2]           1           1                              100.00 
                                        SSTRB[0-3]           1           1                              100.00 
                                      SWDATA[0-31]           1           1                              100.00 
                                            SWRITE           1           1                              100.00 
                                          transfer           1           1                              100.00 

Total Node Count     =        139 
Toggled Node Count   =        139 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (278 of 278 bins)

=================================================================================
=== Instance: /\tb_top#DUT#Master 
=== Design Unit: work.APB_Master
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17        16         1    94.11%

================================Branch Details================================

Branch Coverage for instance /\tb_top#DUT#Master 

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Master.v
------------------------------------IF Branch------------------------------------
    35                                     10292     Count coming in to IF
    35              1                        601             if(~PRESETn) 
    37              1                       9691             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    43                                     19932     Count coming in to CASE
    44              1                        693                 IDLE : begin
    50              1                       9428                 SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock
    51              1                       9809                 ACCESS : begin
    59              1                          2                 default : ns = IDLE;
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                       693     Count coming in to IF
    45              1                        431                     if(transfer)
    47              1                        262                     else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      9809     Count coming in to IF
    52              1                        259                     if(PREADY && !transfer)
    54              1                       4696                     else if(PREADY && transfer)
    56              1                       4854                     else
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                     19968     Count coming in to IF
    65              1                        605             if(~PRESETn)
    75              1                      19363             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    76                                     19363     Count coming in to CASE
    77              1                        557                     IDLE : begin
    81              1                       9551                     SETUP : begin
    90              1                       9255                     ACCESS : begin
                                         ***0***     All False Count
Branch totals: 3 hits of 4 branches = 75.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         3         1    75.00%

================================Condition Details================================

Condition Coverage for instance /\tb_top#DUT#Master  --

  File design/APB_design/APB_Master.v
----------------Focused Condition View-------------------
Line       52 Item    1  (PREADY && ~transfer)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      PREADY         Y
    transfer         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  PREADY_0              -                             
  Row   2:          1  PREADY_1              ~transfer                     
  Row   3:          1  transfer_0            PREADY                        
  Row   4:          1  transfer_1            PREADY                        

----------------Focused Condition View-------------------
Line       54 Item    1  (PREADY && transfer)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      PREADY         Y
    transfer         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  PREADY_0              -                             
  Row   2:          1  PREADY_1              transfer                      
  Row   3:    ***0***  transfer_0            PREADY                        
  Row   4:          1  transfer_1            PREADY                        


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       3         3         0   100.00%
    FSM Transitions                  5         5         0   100.00%

================================FSM Details================================

FSM Coverage for instance /\tb_top#DUT#Master  --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  44                IDLE                   0
  50               SETUP                   1
  51              ACCESS                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 741          
                   SETUP                4848          
                  ACCESS                4703          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  46                   0                 416          IDLE -> SETUP                 
  50                   1                4703          SETUP -> ACCESS               
  36                   2                 144          SETUP -> IDLE                 
  55                   3                4432          ACCESS -> SETUP               
  53                   4                 271          ACCESS -> IDLE                


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   3         3         0   100.00%
        FSM Transitions              5         5         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      30        30         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#DUT#Master  --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Master.v
    4                                                module APB_Master (
    5                                                        //the followin signals are from the External System 
    6                                                        //the system signals names will begin with letter S
    7                                                        //note : we will act as the external system in the testbench
    8                                                        input SWRITE,
    9                                                        input [`APB_ADDR_WIDTH-1:0] SADDR, 
    10                                                       input [`APB_DATA_WIDTH-1:0] SWDATA, 
    11                                                       input [`APB_STRB_WIDTH-1:0] SSTRB,
    12                                                       input [`APB_PROT_WIDTH-1:0] SPROT,
    13                                                       input transfer,   //to indicate the beginning of the transfer
    14                                               
    15                                                       //the followin signals are Master signals
    16                                                       output reg PSEL, PENABLE, PWRITE,
    17                                                       output reg [`APB_ADDR_WIDTH-1:0] PADDR,
    18                                                       output reg [`APB_DATA_WIDTH-1:0] PWDATA,
    19                                                       output reg [`APB_STRB_WIDTH-1:0] PSTRB,
    20                                                       output reg [`APB_PROT_WIDTH-1:0] PPROT,
    21                                                       input PCLK, PRESETn,
    22                                                       input  PREADY,
    23                                                       input PSLVERR
    24                                                   );
    25                                                   //defining our states
    26                                                   localparam  IDLE = 2'b00,
    27                                                               SETUP = 2'b01,
    28                                                               ACCESS = 2'b10;
    29                                                   (* fsm_encoding = "one_hot" *)
    30                                                   reg [1:0] ns, cs ; //next state, current state
    31                                               
    32                                                   //state memory 
    33              1                      10292         always @(posedge PCLK, negedge PRESETn)
    34                                                   begin
    35                                                       if(~PRESETn) 
    36              1                        601                 cs <= IDLE;
    37                                                       else 
    38              1                       9691                 cs <= ns;
    39                                                   end
    40                                               
    41                                                   //next state logic
    42              1                      19932         always @(*) begin
    43                                                       case(cs)
    44                                                           IDLE : begin
    45                                                               if(transfer)
    46              1                        431                         ns = SETUP;
    47                                                               else
    48              1                        262                         ns = IDLE;
    49                                                           end
    50              1                       9428                 SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock
    51                                                           ACCESS : begin
    52                                                               if(PREADY && !transfer)
    53              1                        259                         ns = IDLE;
    54                                                               else if(PREADY && transfer)
    55              1                       4696                         ns = SETUP;
    56                                                               else
    57              1                       4854                         ns = ACCESS;
    58                                                           end
    59              1                          2                 default : ns = IDLE;
    60                                                       endcase
    61                                                   end
    62                                               
    63                                                   //output logic
    64              1                      19968         always @(*) begin
    65                                                       if(~PRESETn)
    66                                                           begin
    67              1                        605                     PSEL = 0;
    68              1                        605                     PENABLE = 0;
    69              1                        605                     PWRITE = 0;
    70              1                        605                     PADDR = 0;
    71              1                        605                     PWDATA = 0;
    72              1                        605                     PSTRB = 0;
    73              1                        605                     PPROT = 0;
    74                                                           end
    75                                                       else begin
    76                                                           case(cs)
    77                                                               IDLE : begin
    78              1                        557                         PSEL = 0;
    79              1                        557                         PENABLE = 0;
    80                                                               end
    81                                                               SETUP : begin
    82              1                       9551                         PSEL = 1;
    83              1                       9551                         PENABLE = 0;   //signals are sent to slave in setup state
    84              1                       9551                         PWRITE = SWRITE;
    85              1                       9551                         PADDR = SADDR;
    86              1                       9551                         PWDATA = SWDATA;
    87              1                       9551                         PSTRB = SSTRB;
    88              1                       9551                         PPROT = SPROT;
    89                                                               end
    90                                                               ACCESS : begin
    91              1                       9255                         PSEL = 1;
    92              1                       9255                         PENABLE = 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        222       222         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT#Master  --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[9-0]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[2-0]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[3-0]           1           1                              100.00 
                                      PWDATA[31-0]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 
                                        SADDR[0-9]           1           1                              100.00 
                                        SPROT[0-2]           1           1                              100.00 
                                        SSTRB[0-3]           1           1                              100.00 
                                      SWDATA[0-31]           1           1                              100.00 
                                            SWRITE           1           1                              100.00 
                                           cs[1-0]           1           1                              100.00 
                                           ns[1-0]           1           1                              100.00 
                                          transfer           1           1                              100.00 

Total Node Count     =        111 
Toggled Node Count   =        111 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (222 of 222 bins)

=================================================================================
=== Instance: /\tb_top#DUT#Slave 
=== Design Unit: work.APB_Slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        23        23         0   100.00%

================================Branch Details================================

Branch Coverage for instance /\tb_top#DUT#Slave 

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Slave.v
------------------------------------IF Branch------------------------------------
    23                                      9725     Count coming in to IF
    23              1                        304             if (~PRESETn) begin
    27              1                       9005             else if (PSEL) begin  // Access state when PSEL is high
                                             416     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    29                                      9005     Count coming in to IF
    29              1                       6512                 if (PWRITE) begin     
    51              1                       2493                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    30                                      6512     Count coming in to CASE
    31              1                        228                     4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)
    32              1                        193                     4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits
    33              1                        185                     4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)
    34              1                        207                     4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits
    35              1                        210                     4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes
    36              1                        184                     4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits
    37              1                        184                     4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)
    38              1                        176                     4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension
    39              1                        193                     4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension
    40              1                        234                     4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0
    41              1                        235                     4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary
    42              1                        166                     4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension
    43              1                        925                     4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits
    44              1                       1019                     4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits
    45              1                       1997                     4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension
    46              1                        176                     default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values
Branch totals: 16 hits of 16 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      2493     Count coming in to IF
    52              1                       1907                     if (PSTRB != 0)
    54              1                        586                     else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         1         0   100.00%

================================Condition Details================================

Condition Coverage for instance /\tb_top#DUT#Slave  --

  File design/APB_design/APB_Slave.v
----------------Focused Condition View-------------------
Line       52 Item    1  (PSTRB != 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (PSTRB != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (PSTRB != 0)_0        -                             
  Row   2:          1  (PSTRB != 0)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        23         0   100.00%

================================Statement Details================================

Statement Coverage for instance /\tb_top#DUT#Slave  --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File design/APB_design/APB_Slave.v
    5                                                module APB_Slave #(
    6                                                        parameter MEM_WIDTH = `MEM_WIDTH, 
    7                                                        parameter MEM_DEPTH = `MEM_DEPTH
    8                                                    ) (
    9                                                        input PSEL, PENABLE, PWRITE,  
    10                                                       input [`APB_ADDR_WIDTH-1:0] PADDR, 
    11                                                       input [`APB_DATA_WIDTH-1:0] PWDATA,
    12                                                       input [`APB_STRB_WIDTH-1:0] PSTRB,
    13                                                       input [`APB_PROT_WIDTH-1:0] PPROT,
    14                                                       input PCLK, PRESETn,
    15                                                       output reg [`APB_DATA_WIDTH-1:0] PRDATA,
    16                                                       output PREADY,
    17                                                       output reg PSLVERR
    18                                                   );
    19                                                   // Define memory using the MEM_WIDTH and MEM_DEPTH from `defines`
    20                                                   reg [MEM_WIDTH-1:0] Cache [MEM_DEPTH-1:0];
    21                                               
    22              1                       9725         always @ (posedge PCLK) begin
    23                                                       if (~PRESETn) begin
    24              1                        304                 PSLVERR <= 0;
    25              1                        304                 PRDATA <= 0;
    26                                                       end
    27                                                       else if (PSEL) begin  // Access state when PSEL is high
    28                                                           // Writing stage
    29                                                           if (PWRITE) begin     
    30                                                             case (PSTRB)
    31              1                        228                     4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)
    32              1                        193                     4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits
    33              1                        185                     4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)
    34              1                        207                     4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits
    35              1                        210                     4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes
    36              1                        184                     4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits
    37              1                        184                     4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)
    38              1                        176                     4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension
    39              1                        193                     4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension
    40              1                        234                     4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0
    41              1                        235                     4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary
    42              1                        166                     4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension
    43              1                        925                     4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits
    44              1                       1019                     4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits
    45              1                       1997                     4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension
    46              1                        176                     default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values
    47                                                           endcase
    48              1                       6512                     PSLVERR <= 0;
    49                                                           end
    50                                                           // Reading stage
    51                                                           else begin
    52                                                               if (PSTRB != 0)
    53              1                       1907                         PSLVERR <= 1;  // PSTRB must remain low when reading
    54                                                               else begin
    55              1                        586                         PRDATA <= Cache[PADDR];
    56              1                        586                         PSLVERR <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        176       176         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /\tb_top#DUT#Slave  --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                        PADDR[0-9]           1           1                              100.00 
                                              PCLK           1           1                              100.00 
                                           PENABLE           1           1                              100.00 
                                        PPROT[0-2]           1           1                              100.00 
                                      PRDATA[31-0]           1           1                              100.00 
                                            PREADY           1           1                              100.00 
                                           PRESETn           1           1                              100.00 
                                              PSEL           1           1                              100.00 
                                           PSLVERR           1           1                              100.00 
                                        PSTRB[0-3]           1           1                              100.00 
                                      PWDATA[0-31]           1           1                              100.00 
                                            PWRITE           1           1                              100.00 

Total Node Count     =         88 
Toggled Node Count   =         88 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (176 of 176 bins)


ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/\tb_top#DUT /APB_sva_inst/reset_master_assert
                     design/APB_Assertions/APB_sva.sv(54)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/reset_slave_assert
                     design/APB_Assertions/APB_sva.sv(57)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/reset_fsm_assert
                     design/APB_Assertions/APB_sva.sv(60)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/idle_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(76)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/idle_hold_assert
                     design/APB_Assertions/APB_sva.sv(79)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/setup_to_access_assert
                     design/APB_Assertions/APB_sva.sv(88)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/access_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(102)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/illegal_access_to_setup_assert
                     design/APB_Assertions/APB_sva.sv(105)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/access_to_idle_assert
                     design/APB_Assertions/APB_sva.sv(119)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/illegal_access_to_idle_assert
                     design/APB_Assertions/APB_sva.sv(122)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_idle_assert
                     design/APB_Assertions/APB_sva.sv(131)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_setup_assert
                     design/APB_Assertions/APB_sva.sv(146)
                                                        0          1
/\tb_top#DUT /APB_sva_inst/peripheral_signals_access_assert
                     design/APB_Assertions/APB_sva.sv(155)
                                                        0          1

Total Coverage By Instance (filtered view): 96.78%

