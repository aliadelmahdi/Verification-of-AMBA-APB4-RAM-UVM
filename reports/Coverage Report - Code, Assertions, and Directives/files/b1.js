var g_data = {"6":{"pr":"/\\tb_top#DUT /Master","t":"inst","br":[{"bs":[{"s":"        if(~PRESETn) \r","f":3,"i":1,"l":37,"h":8},{"s":"        else \r","f":3,"i":1,"l":39,"h":97}],"br":{"s":"        if(~PRESETn) \r","f":3,"l":37,"i":1,"p":100.00}},{"bs":[{"s":"            IDLE : begin\r","f":3,"i":1,"l":46,"h":46},{"s":"            SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock\r","f":3,"i":1,"l":52,"h":81},{"s":"            ACCESS : begin\r","f":3,"i":1,"l":53,"h":99},{"s":"            default : ns = IDLE;\r","f":3,"i":1,"l":61,"h":2}],"br":{"s":"        case(cs)\r","f":3,"l":45,"i":1,"p":100.00}},{"bs":[{"s":"                if(transfer)\r","f":3,"i":1,"l":47,"h":17},{"s":"                else\r","f":3,"i":1,"l":49,"h":29}],"br":{"s":"                if(transfer)\r","f":3,"l":47,"i":1,"p":100.00}},{"bs":[{"s":"                if(PREADY && !transfer)\r","f":3,"i":1,"l":54,"h":29},{"s":"                else if(PREADY && transfer)\r","f":3,"i":1,"l":56,"h":31},{"s":"                else\r","f":3,"i":1,"l":58,"h":39}],"br":{"s":"                if(PREADY && !transfer)\r","f":3,"l":54,"i":1,"p":100.00}},{"bs":[{"s":"        if(~PRESETn)\r","f":3,"i":1,"l":67,"h":8},{"s":"        else begin\r","f":3,"i":1,"l":77,"h":186}],"br":{"s":"        if(~PRESETn)\r","f":3,"l":67,"i":1,"p":100.00}},{"bs":[{"s":"                IDLE : begin\r","f":3,"i":1,"l":79,"h":38},{"s":"                SETUP : begin\r","f":3,"i":1,"l":83,"h":76},{"s":"                ACCESS : begin\r","f":3,"i":1,"l":92,"h":72},{"s":"All False","f":3,"i":1,"l":78,"h":0}],"br":{"s":"            case(cs)\r","f":3,"l":78,"i":1,"p":75.00}}]},"7":{"pr":"/\\tb_top#DUT /Slave","t":"inst","br":[{"bs":[{"s":"        if (~PRESETn) begin\r","f":4,"i":1,"l":22,"h":4},{"s":"        else if (PSEL) begin  // Access state when PSEL is high\r","f":4,"i":1,"l":26,"h":71},{"s":"All False","f":4,"i":1,"l":22,"h":17}],"br":{"s":"        if (~PRESETn) begin\r","f":4,"l":22,"i":1,"p":100.00}},{"bs":[{"s":"            if (PWRITE) begin     \r","f":4,"i":1,"l":28,"h":57},{"s":"            else begin\r","f":4,"i":1,"l":50,"h":14}],"br":{"s":"            if (PWRITE) begin     \r","f":4,"l":28,"i":1,"p":100.00}},{"bs":[{"s":"                4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)\r","f":4,"i":1,"l":30,"h":2},{"s":"                4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits\r","f":4,"i":1,"l":31,"h":4},{"s":"                4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)\r","f":4,"i":1,"l":32,"h":0},{"s":"                4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits\r","f":4,"i":1,"l":33,"h":2},{"s":"                4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes\r","f":4,"i":1,"l":34,"h":0},{"s":"                4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":35,"h":0},{"s":"                4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)\r","f":4,"i":1,"l":36,"h":2},{"s":"                4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension\r","f":4,"i":1,"l":37,"h":2},{"s":"                4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension\r","f":4,"i":1,"l":38,"h":0},{"s":"                4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0\r","f":4,"i":1,"l":39,"h":2},{"s":"                4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary\r","f":4,"i":1,"l":40,"h":4},{"s":"                4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension\r","f":4,"i":1,"l":41,"h":0},{"s":"                4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":42,"h":9},{"s":"                4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":43,"h":12},{"s":"                4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension\r","f":4,"i":1,"l":44,"h":14},{"s":"                default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values\r","f":4,"i":1,"l":45,"h":4}],"br":{"s":"              case (PSTRB)\r","f":4,"l":29,"i":1,"p":68.75}},{"bs":[{"s":"                if (PSTRB != 0)\r","f":4,"i":1,"l":51,"h":13},{"s":"                else begin\r","f":4,"i":1,"l":53,"h":1}],"br":{"s":"                if (PSTRB != 0)\r","f":4,"l":51,"i":1,"p":100.00}}]},"9":{"pr":"/\\tb_top#DUT#Master ","t":"inst","br":[{"bs":[{"s":"        if(~PRESETn) \r","f":3,"i":1,"l":37,"h":8},{"s":"        else \r","f":3,"i":1,"l":39,"h":97}],"br":{"s":"        if(~PRESETn) \r","f":3,"l":37,"i":1,"p":100.00}},{"bs":[{"s":"            IDLE : begin\r","f":3,"i":1,"l":46,"h":46},{"s":"            SETUP : ns = ACCESS; //The bus only remains in the SETUP state for one clock cycle and always moves to the ACCESS state on the next rising edge of the clock\r","f":3,"i":1,"l":52,"h":81},{"s":"            ACCESS : begin\r","f":3,"i":1,"l":53,"h":99},{"s":"            default : ns = IDLE;\r","f":3,"i":1,"l":61,"h":2}],"br":{"s":"        case(cs)\r","f":3,"l":45,"i":1,"p":100.00}},{"bs":[{"s":"                if(transfer)\r","f":3,"i":1,"l":47,"h":17},{"s":"                else\r","f":3,"i":1,"l":49,"h":29}],"br":{"s":"                if(transfer)\r","f":3,"l":47,"i":1,"p":100.00}},{"bs":[{"s":"                if(PREADY && !transfer)\r","f":3,"i":1,"l":54,"h":29},{"s":"                else if(PREADY && transfer)\r","f":3,"i":1,"l":56,"h":31},{"s":"                else\r","f":3,"i":1,"l":58,"h":39}],"br":{"s":"                if(PREADY && !transfer)\r","f":3,"l":54,"i":1,"p":100.00}},{"bs":[{"s":"        if(~PRESETn)\r","f":3,"i":1,"l":67,"h":8},{"s":"        else begin\r","f":3,"i":1,"l":77,"h":186}],"br":{"s":"        if(~PRESETn)\r","f":3,"l":67,"i":1,"p":100.00}},{"bs":[{"s":"                IDLE : begin\r","f":3,"i":1,"l":79,"h":38},{"s":"                SETUP : begin\r","f":3,"i":1,"l":83,"h":76},{"s":"                ACCESS : begin\r","f":3,"i":1,"l":92,"h":72},{"s":"All False","f":3,"i":1,"l":78,"h":0}],"br":{"s":"            case(cs)\r","f":3,"l":78,"i":1,"p":75.00}}]},"10":{"pr":"/\\tb_top#DUT#Slave ","t":"inst","br":[{"bs":[{"s":"        if (~PRESETn) begin\r","f":4,"i":1,"l":22,"h":4},{"s":"        else if (PSEL) begin  // Access state when PSEL is high\r","f":4,"i":1,"l":26,"h":71},{"s":"All False","f":4,"i":1,"l":22,"h":17}],"br":{"s":"        if (~PRESETn) begin\r","f":4,"l":22,"i":1,"p":100.00}},{"bs":[{"s":"            if (PWRITE) begin     \r","f":4,"i":1,"l":28,"h":57},{"s":"            else begin\r","f":4,"i":1,"l":50,"h":14}],"br":{"s":"            if (PWRITE) begin     \r","f":4,"l":28,"i":1,"p":100.00}},{"bs":[{"s":"                4'b0001: Cache[PADDR] <= {{24{PWDATA[7]}}, PWDATA[7:0]}; // Store the least significant byte (sb)\r","f":4,"i":1,"l":30,"h":2},{"s":"                4'b0010: Cache[PADDR] <= {{24{PWDATA[15]}}, PWDATA[15:8], 8'h00}; // Store the second byte with zeroes in the least 8 bits\r","f":4,"i":1,"l":31,"h":4},{"s":"                4'b0011: Cache[PADDR] <= {{16{PWDATA[15]}}, PWDATA[15:0]}; // Store the least significant half-word (sh)\r","f":4,"i":1,"l":32,"h":0},{"s":"                4'b0100: Cache[PADDR] <= {{24{PWDATA[23]}}, PWDATA[23:16], 8'h00}; // Store the third byte with zeroes in the least 8 bits\r","f":4,"i":1,"l":33,"h":2},{"s":"                4'b0101: Cache[PADDR] <= {{16{PWDATA[23]}}, PWDATA[23:16], 8'h00, PWDATA[7:0]}; // Store the third and least significant bytes with zeroes\r","f":4,"i":1,"l":34,"h":0},{"s":"                4'b0110: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:8], 8'h00}; // Store the second and third bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":35,"h":0},{"s":"                4'b0111: Cache[PADDR] <= {{8{PWDATA[23]}}, PWDATA[23:0]}; // Store the least significant three bytes (sh)\r","f":4,"i":1,"l":36,"h":2},{"s":"                4'b1000: Cache[PADDR] <= {PWDATA[31:24], 24'h000000}; // Store the most significant byte without sign extension\r","f":4,"i":1,"l":37,"h":2},{"s":"                4'b1001: Cache[PADDR] <= {PWDATA[31:24], 16'h0000, PWDATA[7:0]}; // Store the most and least significant bytes without sign extension\r","f":4,"i":1,"l":38,"h":0},{"s":"                4'b1010: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:8], 8'h00}; // Store the most significant half-word with zeroes in the least significant byte if PSTRB[0] == 0\r","f":4,"i":1,"l":39,"h":2},{"s":"                4'b1011: Cache[PADDR] <= {PWDATA[31:23], 8'h00, PWDATA[15:0]}; // Store the most significant half-word and the least significant byte, zeroing the middle byte if necessary\r","f":4,"i":1,"l":40,"h":4},{"s":"                4'b1100: Cache[PADDR] <= {PWDATA[31:16], 16'h0000}; // Store the most significant and second bytes without sign extension\r","f":4,"i":1,"l":41,"h":0},{"s":"                4'b1101: Cache[PADDR] <= {PWDATA[31:16], 8'h00, PWDATA[7:0]}; // Store the most significant three bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":42,"h":9},{"s":"                4'b1110: Cache[PADDR] <= {PWDATA[31:8], 8'h00}; // Store the most significant three bytes with zeroes in the least 8 bits\r","f":4,"i":1,"l":43,"h":12},{"s":"                4'b1111: Cache[PADDR] <= PWDATA[31:0]; // Store the full word without sign extension\r","f":4,"i":1,"l":44,"h":14},{"s":"                default: Cache[PADDR] <= 32'h00000000; // Default case to handle invalid PSTRB values\r","f":4,"i":1,"l":45,"h":4}],"br":{"s":"              case (PSTRB)\r","f":4,"l":29,"i":1,"p":68.75}},{"bs":[{"s":"                if (PSTRB != 0)\r","f":4,"i":1,"l":51,"h":13},{"s":"                else begin\r","f":4,"i":1,"l":53,"h":1}],"br":{"s":"                if (PSTRB != 0)\r","f":4,"l":51,"i":1,"p":100.00}}]}};
processBranchesData(g_data);