var g_data = {"name":"./design/APB_design/APB_Wrapper.v","src":"`ifndef APB_WRAPPER_V\n`define APB_WRAPPER_V\n\nmodule APB_Wrapper (\n    input PCLK, PRESETn,\n    input SWRITE,\n    input [`APB_ADDR_WIDTH-1:0] SADDR,\n    input [`APB_DATA_WIDTH-1:0] SWDATA,\n    input [`APB_STRB_WIDTH-1:0] SSTRB,\n    input [`APB_PROT_WIDTH-1:0] SPROT,\n    input transfer,\n    output [`APB_DATA_WIDTH-1:0] PRDATA\n    );\n\n    wire PSEL, PENABLE, PWRITE;\n    wire [`APB_ADDR_WIDTH-1:0] PADDR;\n    wire [`APB_DATA_WIDTH-1:0] PWDATA;\n    wire [`APB_STRB_WIDTH-1:0] PSTRB;\n    wire [`APB_PROT_WIDTH-1:0] PPROT;\n    wire PREADY, PSLVERR;\n\n    // Instantiating our master\n    APB_Master Master (\n        .PCLK (PCLK),\n        .PRESETn(PRESETn),\n        .SWRITE(SWRITE),\n        .SADDR(SADDR),\n        .SWDATA(SWDATA),\n        .SSTRB(SSTRB),\n        .SPROT(SPROT),\n        .transfer(transfer),\n        .PSEL(PSEL),\n        .PENABLE(PENABLE),\n        .PWRITE(PWRITE),\n        .PADDR(PADDR),\n        .PWDATA(PWDATA),\n        .PSTRB(PSTRB),\n        .PPROT(PPROT),\n        .PREADY(PREADY),\n        .PSLVERR(PSLVERR)\n    );\n\n    // Instantiating our slave\n    APB_Slave Slave (\n        .PCLK(PCLK),\n        .PRESETn(PRESETn),\n        .PSEL(PSEL),\n        .PENABLE(PENABLE),\n        .PWRITE(PWRITE),\n        .PADDR(PADDR),\n        .PWDATA(PWDATA),\n        .PSTRB(PSTRB),\n        .PPROT(PPROT),\n        .PREADY(PREADY),\n        .PSLVERR(PSLVERR),\n        .PRDATA(PRDATA)\n    );\n\nendmodule : APB_Wrapper\n\n`endif // APB_WRAPPER_V","lang":"verilog"};
processSrcData(g_data);